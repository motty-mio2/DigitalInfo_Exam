$date
	Thu Jul 23 01:14:11 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module MULTI4b8b $end
$var wire 4 ! a [3:0] $end
$var wire 4 " b [3:0] $end
$var wire 8 # s [7:0] $end
$var wire 5 $ c2 [4:0] $end
$var wire 5 % c1 [4:0] $end
$var wire 4 & ab3 [3:0] $end
$var wire 4 ' ab2 [3:0] $end
$var wire 4 ( ab1 [3:0] $end
$var wire 4 ) ab0 [3:0] $end
$scope module f1 $end
$var wire 4 * a [3:0] $end
$var wire 1 + mo $end
$var wire 1 , c3 $end
$var wire 1 - c2 $end
$var wire 1 . c1 $end
$var wire 5 / c [4:0] $end
$var wire 4 0 b [3:0] $end
$scope module f1 $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 + ci $end
$var wire 1 . co $end
$var wire 1 3 s $end
$upscope $end
$scope module f2 $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 . ci $end
$var wire 1 - co $end
$var wire 1 6 s $end
$upscope $end
$scope module f3 $end
$var wire 1 7 a $end
$var wire 1 8 b $end
$var wire 1 - ci $end
$var wire 1 , co $end
$var wire 1 9 s $end
$upscope $end
$scope module f4 $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 , ci $end
$var wire 1 < co $end
$var wire 1 = s $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 4 > a [3:0] $end
$var wire 1 ? mo $end
$var wire 1 @ c3 $end
$var wire 1 A c2 $end
$var wire 1 B c1 $end
$var wire 5 C c [4:0] $end
$var wire 4 D b [3:0] $end
$scope module f1 $end
$var wire 1 E a $end
$var wire 1 F b $end
$var wire 1 ? ci $end
$var wire 1 B co $end
$var wire 1 G s $end
$upscope $end
$scope module f2 $end
$var wire 1 H a $end
$var wire 1 I b $end
$var wire 1 B ci $end
$var wire 1 A co $end
$var wire 1 J s $end
$upscope $end
$scope module f3 $end
$var wire 1 K a $end
$var wire 1 L b $end
$var wire 1 A ci $end
$var wire 1 @ co $end
$var wire 1 M s $end
$upscope $end
$scope module f4 $end
$var wire 1 N a $end
$var wire 1 O b $end
$var wire 1 @ ci $end
$var wire 1 P co $end
$var wire 1 Q s $end
$upscope $end
$upscope $end
$scope module f3 $end
$var wire 4 R a [3:0] $end
$var wire 1 S mo $end
$var wire 1 T c3 $end
$var wire 1 U c2 $end
$var wire 1 V c1 $end
$var wire 5 W c [4:0] $end
$var wire 4 X b [3:0] $end
$scope module f1 $end
$var wire 1 Y a $end
$var wire 1 Z b $end
$var wire 1 S ci $end
$var wire 1 V co $end
$var wire 1 [ s $end
$upscope $end
$scope module f2 $end
$var wire 1 \ a $end
$var wire 1 ] b $end
$var wire 1 V ci $end
$var wire 1 U co $end
$var wire 1 ^ s $end
$upscope $end
$scope module f3 $end
$var wire 1 _ a $end
$var wire 1 ` b $end
$var wire 1 U ci $end
$var wire 1 T co $end
$var wire 1 a s $end
$upscope $end
$scope module f4 $end
$var wire 1 b a $end
$var wire 1 c b $end
$var wire 1 T ci $end
$var wire 1 d co $end
$var wire 1 e s $end
$upscope $end
$upscope $end
$scope module m0 $end
$var wire 4 f a [3:0] $end
$var wire 1 g b $end
$var wire 4 h s [3:0] $end
$upscope $end
$scope module m1 $end
$var wire 4 i a [3:0] $end
$var wire 1 j b $end
$var wire 4 k s [3:0] $end
$upscope $end
$scope module m2 $end
$var wire 4 l a [3:0] $end
$var wire 1 m b $end
$var wire 4 n s [3:0] $end
$upscope $end
$scope module m3 $end
$var wire 4 o a [3:0] $end
$var wire 1 p b $end
$var wire 4 q s [3:0] $end
$upscope $end
$upscope $end
$scope module divtest $end
$var wire 4 r s [3:0] $end
$var wire 4 s r [3:0] $end
$var reg 4 t a [3:0] $end
$var reg 4 u b [3:0] $end
$scope module M $end
$var wire 4 v a [3:0] $end
$var wire 4 w av0 [3:0] $end
$var wire 4 x av1 [3:0] $end
$var wire 4 y av2 [3:0] $end
$var wire 4 z av3 [3:0] $end
$var wire 4 { b [3:0] $end
$var wire 4 | r [3:0] $end
$var wire 4 } s [3:0] $end
$var wire 4 ~ s0 [3:0] $end
$var wire 4 !" s1 [3:0] $end
$var wire 4 "" s2 [3:0] $end
$var wire 4 #" s3 [3:0] $end
$var wire 4 $" sv3 [3:0] $end
$var wire 4 %" sv2 [3:0] $end
$var wire 4 &" sv1 [3:0] $end
$var wire 4 '" sv0 [3:0] $end
$scope module d0 $end
$var wire 4 (" a [3:0] $end
$var wire 4 )" ar [3:0] $end
$var wire 4 *" b [3:0] $end
$var wire 2 +" c [1:0] $end
$var wire 4 ," s [3:0] $end
$var wire 4 -" sw [3:0] $end
$var wire 4 ." sr [3:0] $end
$var wire 2 /" cy [1:0] $end
$var wire 4 0" bx [3:0] $end
$var reg 4 1" az [3:0] $end
$var reg 4 2" sz [3:0] $end
$scope module cxv $end
$var wire 4 3" a [3:0] $end
$var wire 2 4" s [1:0] $end
$var wire 4 5" b [3:0] $end
$scope function cp4 $end
$var reg 4 6" a [3:0] $end
$var reg 4 7" b [3:0] $end
$var reg 2 8" cp4 [1:0] $end
$upscope $end
$upscope $end
$scope module fx $end
$var wire 4 9" a [3:0] $end
$var wire 4 :" c [3:0] $end
$var wire 1 ;" mo $end
$var wire 1 <" c4 $end
$var wire 1 =" c3 $end
$var wire 1 >" c2 $end
$var wire 1 ?" c1 $end
$var wire 4 @" b [3:0] $end
$scope module f1 $end
$var wire 1 A" a $end
$var wire 1 B" b $end
$var wire 1 ;" ci $end
$var wire 1 ?" co $end
$var wire 1 C" s $end
$upscope $end
$scope module f2 $end
$var wire 1 D" a $end
$var wire 1 E" b $end
$var wire 1 ?" ci $end
$var wire 1 >" co $end
$var wire 1 F" s $end
$upscope $end
$scope module f3 $end
$var wire 1 G" a $end
$var wire 1 H" b $end
$var wire 1 >" ci $end
$var wire 1 =" co $end
$var wire 1 I" s $end
$upscope $end
$scope module f4 $end
$var wire 1 J" a $end
$var wire 1 K" b $end
$var wire 1 =" ci $end
$var wire 1 <" co $end
$var wire 1 L" s $end
$upscope $end
$upscope $end
$scope module lc $end
$var wire 4 M" a [3:0] $end
$var wire 2 N" c [1:0] $end
$var wire 4 O" s [3:0] $end
$scope function lshifter $end
$var reg 4 P" a [3:0] $end
$var reg 2 Q" c [1:0] $end
$var reg 4 R" lshifter [3:0] $end
$upscope $end
$upscope $end
$scope module ls $end
$var wire 4 S" a [3:0] $end
$var wire 2 T" c [1:0] $end
$var wire 4 U" s [3:0] $end
$scope function lshifter $end
$var reg 4 V" a [3:0] $end
$var reg 2 W" c [1:0] $end
$var reg 4 X" lshifter [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module d1 $end
$var wire 4 Y" a [3:0] $end
$var wire 4 Z" ar [3:0] $end
$var wire 4 [" b [3:0] $end
$var wire 2 \" c [1:0] $end
$var wire 4 ]" s [3:0] $end
$var wire 4 ^" sw [3:0] $end
$var wire 4 _" sr [3:0] $end
$var wire 2 `" cy [1:0] $end
$var wire 4 a" bx [3:0] $end
$var reg 4 b" az [3:0] $end
$var reg 4 c" sz [3:0] $end
$scope module cxv $end
$var wire 4 d" a [3:0] $end
$var wire 2 e" s [1:0] $end
$var wire 4 f" b [3:0] $end
$scope function cp4 $end
$var reg 4 g" a [3:0] $end
$var reg 4 h" b [3:0] $end
$var reg 2 i" cp4 [1:0] $end
$upscope $end
$upscope $end
$scope module fx $end
$var wire 4 j" a [3:0] $end
$var wire 4 k" c [3:0] $end
$var wire 1 l" mo $end
$var wire 1 m" c4 $end
$var wire 1 n" c3 $end
$var wire 1 o" c2 $end
$var wire 1 p" c1 $end
$var wire 4 q" b [3:0] $end
$scope module f1 $end
$var wire 1 r" a $end
$var wire 1 s" b $end
$var wire 1 l" ci $end
$var wire 1 p" co $end
$var wire 1 t" s $end
$upscope $end
$scope module f2 $end
$var wire 1 u" a $end
$var wire 1 v" b $end
$var wire 1 p" ci $end
$var wire 1 o" co $end
$var wire 1 w" s $end
$upscope $end
$scope module f3 $end
$var wire 1 x" a $end
$var wire 1 y" b $end
$var wire 1 o" ci $end
$var wire 1 n" co $end
$var wire 1 z" s $end
$upscope $end
$scope module f4 $end
$var wire 1 {" a $end
$var wire 1 |" b $end
$var wire 1 n" ci $end
$var wire 1 m" co $end
$var wire 1 }" s $end
$upscope $end
$upscope $end
$scope module lc $end
$var wire 4 ~" a [3:0] $end
$var wire 2 !# c [1:0] $end
$var wire 4 "# s [3:0] $end
$scope function lshifter $end
$var reg 4 ## a [3:0] $end
$var reg 2 $# c [1:0] $end
$var reg 4 %# lshifter [3:0] $end
$upscope $end
$upscope $end
$scope module ls $end
$var wire 4 &# a [3:0] $end
$var wire 2 '# c [1:0] $end
$var wire 4 (# s [3:0] $end
$scope function lshifter $end
$var reg 4 )# a [3:0] $end
$var reg 2 *# c [1:0] $end
$var reg 4 +# lshifter [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module d2 $end
$var wire 4 ,# a [3:0] $end
$var wire 4 -# ar [3:0] $end
$var wire 4 .# b [3:0] $end
$var wire 2 /# c [1:0] $end
$var wire 4 0# s [3:0] $end
$var wire 4 1# sw [3:0] $end
$var wire 4 2# sr [3:0] $end
$var wire 2 3# cy [1:0] $end
$var wire 4 4# bx [3:0] $end
$var reg 4 5# az [3:0] $end
$var reg 4 6# sz [3:0] $end
$scope module cxv $end
$var wire 4 7# a [3:0] $end
$var wire 2 8# s [1:0] $end
$var wire 4 9# b [3:0] $end
$scope function cp4 $end
$var reg 4 :# a [3:0] $end
$var reg 4 ;# b [3:0] $end
$var reg 2 <# cp4 [1:0] $end
$upscope $end
$upscope $end
$scope module fx $end
$var wire 4 =# a [3:0] $end
$var wire 4 ># c [3:0] $end
$var wire 1 ?# mo $end
$var wire 1 @# c4 $end
$var wire 1 A# c3 $end
$var wire 1 B# c2 $end
$var wire 1 C# c1 $end
$var wire 4 D# b [3:0] $end
$scope module f1 $end
$var wire 1 E# a $end
$var wire 1 F# b $end
$var wire 1 ?# ci $end
$var wire 1 C# co $end
$var wire 1 G# s $end
$upscope $end
$scope module f2 $end
$var wire 1 H# a $end
$var wire 1 I# b $end
$var wire 1 C# ci $end
$var wire 1 B# co $end
$var wire 1 J# s $end
$upscope $end
$scope module f3 $end
$var wire 1 K# a $end
$var wire 1 L# b $end
$var wire 1 B# ci $end
$var wire 1 A# co $end
$var wire 1 M# s $end
$upscope $end
$scope module f4 $end
$var wire 1 N# a $end
$var wire 1 O# b $end
$var wire 1 A# ci $end
$var wire 1 @# co $end
$var wire 1 P# s $end
$upscope $end
$upscope $end
$scope module lc $end
$var wire 4 Q# a [3:0] $end
$var wire 2 R# c [1:0] $end
$var wire 4 S# s [3:0] $end
$scope function lshifter $end
$var reg 4 T# a [3:0] $end
$var reg 2 U# c [1:0] $end
$var reg 4 V# lshifter [3:0] $end
$upscope $end
$upscope $end
$scope module ls $end
$var wire 4 W# a [3:0] $end
$var wire 2 X# c [1:0] $end
$var wire 4 Y# s [3:0] $end
$scope function lshifter $end
$var reg 4 Z# a [3:0] $end
$var reg 2 [# c [1:0] $end
$var reg 4 \# lshifter [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module d3 $end
$var wire 4 ]# a [3:0] $end
$var wire 4 ^# ar [3:0] $end
$var wire 4 _# b [3:0] $end
$var wire 2 `# c [1:0] $end
$var wire 4 a# s [3:0] $end
$var wire 4 b# sw [3:0] $end
$var wire 4 c# sr [3:0] $end
$var wire 2 d# cy [1:0] $end
$var wire 4 e# bx [3:0] $end
$var reg 4 f# az [3:0] $end
$var reg 4 g# sz [3:0] $end
$scope module cxv $end
$var wire 4 h# a [3:0] $end
$var wire 2 i# s [1:0] $end
$var wire 4 j# b [3:0] $end
$scope function cp4 $end
$var reg 4 k# a [3:0] $end
$var reg 4 l# b [3:0] $end
$var reg 2 m# cp4 [1:0] $end
$upscope $end
$upscope $end
$scope module fx $end
$var wire 4 n# a [3:0] $end
$var wire 4 o# c [3:0] $end
$var wire 1 p# mo $end
$var wire 1 q# c4 $end
$var wire 1 r# c3 $end
$var wire 1 s# c2 $end
$var wire 1 t# c1 $end
$var wire 4 u# b [3:0] $end
$scope module f1 $end
$var wire 1 v# a $end
$var wire 1 w# b $end
$var wire 1 p# ci $end
$var wire 1 t# co $end
$var wire 1 x# s $end
$upscope $end
$scope module f2 $end
$var wire 1 y# a $end
$var wire 1 z# b $end
$var wire 1 t# ci $end
$var wire 1 s# co $end
$var wire 1 {# s $end
$upscope $end
$scope module f3 $end
$var wire 1 |# a $end
$var wire 1 }# b $end
$var wire 1 s# ci $end
$var wire 1 r# co $end
$var wire 1 ~# s $end
$upscope $end
$scope module f4 $end
$var wire 1 !$ a $end
$var wire 1 "$ b $end
$var wire 1 r# ci $end
$var wire 1 q# co $end
$var wire 1 #$ s $end
$upscope $end
$upscope $end
$scope module lc $end
$var wire 4 $$ a [3:0] $end
$var wire 2 %$ c [1:0] $end
$var wire 4 &$ s [3:0] $end
$scope function lshifter $end
$var reg 4 '$ a [3:0] $end
$var reg 2 ($ c [1:0] $end
$var reg 4 )$ lshifter [3:0] $end
$upscope $end
$upscope $end
$scope module ls $end
$var wire 4 *$ a [3:0] $end
$var wire 2 +$ c [1:0] $end
$var wire 4 ,$ s [3:0] $end
$scope function lshifter $end
$var reg 4 -$ a [3:0] $end
$var reg 2 .$ c [1:0] $end
$var reg 4 /$ lshifter [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1000 /$
b11 .$
b1 -$
b1000 ,$
b11 +$
b1 *$
b1000 )$
b11 ($
b1 '$
b1000 &$
b11 %$
b1 $$
0#$
0"$
1!$
1~#
1}#
1|#
1{#
1z#
1y#
1x#
1w#
1v#
b1000 u#
1t#
1s#
1r#
1q#
1p#
bx111 o#
b1111 n#
b10 m#
b1000 l#
b1111 k#
b1000 j#
b10 i#
b1111 h#
bz g#
b1111 f#
b1000 e#
b10 d#
bz c#
b1000 b#
bz a#
b11 `#
b1 _#
bx111 ^#
b1111 ]#
b100 \#
b10 [#
b1 Z#
b100 Y#
b10 X#
b1 W#
b100 V#
b10 U#
b1 T#
b100 S#
b10 R#
b1 Q#
xP#
1O#
xN#
0M#
0L#
1K#
1J#
1I#
1H#
1G#
1F#
1E#
b100 D#
1C#
1B#
1A#
1@#
1?#
bx >#
bx111 =#
b10 <#
b100 ;#
bx111 :#
b100 9#
b10 8#
bx111 7#
bx1xx 6#
bx 5#
b100 4#
b10 3#
bx1xx 2#
b100 1#
bz 0#
b10 /#
b1 .#
bx -#
bx111 ,#
b10 +#
b1 *#
b1 )#
b10 (#
b1 '#
b1 &#
b10 %#
b1 $#
b1 ##
b10 "#
b1 !#
b1 ~"
x}"
1|"
x{"
xz"
1y"
xx"
xw"
0v"
xu"
xt"
1s"
xr"
b10 q"
1p"
xo"
xn"
xm"
1l"
bx k"
bx j"
b11 i"
b10 h"
bx g"
b10 f"
b11 e"
bx d"
bz c"
bx b"
b10 a"
b11 `"
bz _"
b10 ^"
bz ]"
b1 \"
b1 ["
bx Z"
bx Y"
b1 X"
b0 W"
b1 V"
b1 U"
b0 T"
b1 S"
b1 R"
b0 Q"
b1 P"
b1 O"
b0 N"
b1 M"
xL"
1K"
xJ"
xI"
1H"
xG"
xF"
1E"
xD"
xC"
0B"
xA"
b1 @"
x?"
x>"
x="
x<"
1;"
bx :"
bx 9"
b11 8"
b1 7"
bx 6"
b1 5"
b11 4"
bx 3"
bz 2"
bx 1"
b1 0"
b11 /"
bz ."
b1 -"
bz ,"
b0 +"
b1 *"
bx )"
bx ("
bz '"
bz &"
bx1xx %"
bz $"
bz #"
bz ""
bz !"
bz ~
bx1xx }
bx |
b1 {
bx111 z
bx y
bx x
bx w
b1111 v
b1 u
b1111 t
bx s
bx1xx r
bx q
zp
bz o
bx n
zm
bz l
bx k
zj
bz i
bx h
zg
bz f
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
bx X
bx W
xV
xU
xT
0S
bx R
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
bx D
bx C
xB
xA
x@
0?
bx >
x=
x<
x;
0:
x9
x8
x7
x6
x5
x4
x3
x2
x1
bx 0
bx /
x.
x-
x,
0+
b0xxx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
bz "
bz !
$end
#10
0P#
1?"
1o"
1@#
b1111 :#
1N#
1M#
b1111 z
b1111 ,#
b1111 7#
b1111 =#
b1111 ^#
b1111 o#
1#$
0E"
1B"
0y"
1v"
0O#
1L#
1"$
b10 7"
b100 h"
b1000 ;#
b0 l#
b10 0"
b10 5"
b10 @"
b10 O"
b10 R"
b10 P"
b100 a"
b100 f"
b100 q"
b100 "#
b100 %#
b10 ##
b1000 4#
b1000 9#
b1000 D#
b1000 S#
b1000 V#
b10 T#
b0 e#
b0 j#
b0 u#
b0 &$
b0 )$
b10 '$
b10 u
b10 {
b10 *"
b10 M"
b10 ["
b10 ~"
b10 .#
b10 Q#
b10 _#
b10 $$
#20
xP#
x@#
x?"
xo"
bx111 :#
xN#
0M#
bx111 z
bx111 ,#
bx111 7#
bx111 =#
bx111 ^#
bx111 o#
0#$
0B"
0v"
0L#
0"$
b11 7"
b110 h"
b1100 ;#
b1000 l#
b11 0"
b11 5"
b11 @"
b11 O"
b11 R"
b11 P"
b110 a"
b110 f"
b110 q"
b110 "#
b110 %#
b11 ##
b1100 4#
b1100 9#
b1100 D#
b1100 S#
b1100 V#
b11 T#
b1000 e#
b1000 j#
b1000 u#
b1000 &$
b1000 )$
b11 '$
b11 u
b11 {
b11 *"
b11 M"
b11 ["
b11 ~"
b11 .#
b11 Q#
b11 _#
b11 $$
#30
1>"
1n"
1P#
1?"
1o"
1@#
b1111 :#
1N#
1M#
b1111 z
b1111 ,#
b1111 7#
b1111 =#
b1111 ^#
b1111 o#
1#$
0H"
1E"
1B"
0|"
1y"
1v"
1O#
1L#
1"$
b100 7"
b1000 h"
b0 ;#
b0 l#
b100 0"
b100 5"
b100 @"
b100 O"
b100 R"
b100 P"
b1000 a"
b1000 f"
b1000 q"
b1000 "#
b1000 %#
b100 ##
b0 4#
b0 9#
b0 D#
b0 S#
b0 V#
b100 T#
b0 e#
b0 j#
b0 u#
b0 &$
b0 )$
b100 '$
b100 u
b100 {
b100 *"
b100 M"
b100 ["
b100 ~"
b100 .#
b100 Q#
b100 _#
b100 $$
#40
